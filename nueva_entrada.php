<?php
require_once 'config.php'; // Incluir el archivo de configuraci√≥n
require_once 'funciones.php';

// Habilitar la visualizaci√≥n de errores (solo para depuraci√≥n)
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// Establecer la codificaci√≥n a UTF-8
header('Content-Type: text/html; charset=utf-8');

// Verificar si el usuario tiene permisos de editor
if (!esEditor()) {
    header("Location: index.php");
    exit;
}

$titulo = '';
$contenido = '';
$error = '';

// Procesar el formulario al enviarse
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['cancelar'])) {
        header("Location: admin.php");
        exit;
    }

    $titulo = sanitizar($_POST['titulo'] ?? '');
    $contenido = $_POST['contenido'] ?? '';

    if ($titulo === '' || $contenido === '') {
        $error = "El t√≠tulo y el contenido no pueden estar vac√≠os.";
    } else {
        $slug = generarSlug($titulo);
        $entrada = [
            'slug' => $slug,
            'titulo' => $titulo,
            'contenido' => $contenido,
            'autor' => obtenerNombreAutor(), // Utiliza la funci√≥n definida en funciones.php
            'fecha' => date('Y-m-d H:i:s')
        ];

        try {
            guardarEntrada($entrada);
            header("Location: admin.php");
            exit;
        } catch (Exception $e) {
            $error = "Error al guardar la entrada: " . $e->getMessage();
        }
    }
}
// Categor√≠as de emojis organizados en arrays
$emojisPorCategoria = [
                    // Emociones y Caritas
                    "Caras Sonrientes" => ['üòÄ', 'üòÉ', 'üòÑ', 'üòÅ', 'üòÜ', 'üòÖ', 'ü§£', 'üòÇ', 'üôÇ', 'üôÉ', 'ü´†', 'üòâ', 'üòä', 'üòá', 'ü•∞', 'üòç', 'ü§©', 'üòò', 'üòó', 'üòö', 'üòô', 'ü•≤'],
                    "Caritas con Accesorios" => ['üò∑', 'ü§†', 'üòé', 'üßê', 'ü§ì', 'ü•∏', 'ü§°', 'üëª', 'üíÄ', '‚ò†Ô∏è', 'üëΩ', 'ü§ñ', 'üé≠', 'ü•≥'],
                    "Caritas de Salud y Malestar" => ['ü§¢', 'ü§Æ', 'ü§ß', 'ü§í', 'ü§ï', 'ü•µ', 'ü•∂', 'ü•¥', 'üòµ', 'üòµ‚Äçüí´', 'üò™', 'üò¥', 'ü§ê', 'üòÆ‚Äçüí®'],
                    "Caritas Pensativas" => ['ü§î', 'ü§®', 'üòê', 'üòë', 'üò∂', 'üôÑ', 'üòè', 'üòí', 'üòå', 'üßê', 'üò¨', 'ü§•', 'ü´°', 'ü§´', 'ü§≠'],
                    "Caritas de Tristeza y Frustraci√≥n" => ['‚òπÔ∏è', 'üôÅ', 'üòï', 'üòü', 'üòî', 'üòû', 'üò£', 'üòñ', 'üò´', 'üò©', 'ü•∫', 'üò¢', 'üò≠', 'üò§', 'üò†', 'üò°', 'ü§¨', 'üò±', 'üò®', 'üò∞', 'üò•', 'üòì', 'ü§Ø', 'üò∂‚Äçüå´Ô∏è'],
                    "Caritas de Sorpresa" => ['üòÆ', 'üòØ', 'üò≤', 'üò≥', 'üò¶', 'üòß', 'üò±', 'ü§Ø', 'ü´¢', 'ü´£'],

                    // Animales
                    "Animales Terrestres" => ['üê∂', 'üê±', 'üê≠', 'üêπ', 'üê∞', 'ü¶ä', 'üêª', 'üêº', 'üê®', 'üêØ', 'ü¶Å', 'üêÆ', 'üê∑', 'üê∏', 'üêµ', 'ü¶ç', 'ü¶ß', 'üêÜ', 'üêÖ', 'ü¶ì', 'üêò', 'ü¶è', 'ü¶í', 'üêä', 'ü¶ò', 'ü¶¨', 'ü¶£', 'ü¶´', 'ü¶®', 'ü¶°', 'ü¶•'],
                    "Animales Marinos" => ['ü¶à', 'üê¨', 'üê≥', 'üêã', 'üêü', 'üê†', 'üê°', 'ü¶≠', 'üêô', 'ü¶ë', 'ü¶ê', 'ü¶û', 'ü¶Ä', 'üêö'],
                    "Aves e Insectos" => ['üêî', 'üêß', 'üê¶', 'üê§', 'üê£', 'üê•', 'ü¶ã', 'üêõ', 'üêå', 'üêû', 'üêú', 'ü™≤', 'ü™≥', 'ü¶ó', 'üï∑Ô∏è', 'ü¶Ö', 'ü¶Ü', 'ü¶¢', 'ü¶â', 'ü¶§', 'ü™∂'],
                    "Animales Mitol√≥gicos" => ['ü¶Ñ', 'üêâ', 'üê≤', 'ü¶ñ', 'ü¶ï', 'ü¶©', 'ü¶ö', 'ü¶ú'],

                    // Naturaleza
                    "Plantas y Flores" => ['üåµ', 'üéÑ', 'üå≤', 'üå≥', 'üå¥', 'üå±', 'üåø', '‚òòÔ∏è', 'üçÄ', 'üéç', 'üéã', 'üçÉ', 'üçÇ', 'üçÅ', 'üçÑ', 'üåæ', 'üíê', 'üå∑', 'üåπ', 'ü•Ä', 'üå∫', 'üå∏', 'üåº', 'üåª', 'ü™¥', 'ü™∏', 'ü™∑'],
                    "Frutas y Verduras" => ['üçá', 'üçà', 'üçâ', 'üçä', 'üçã', 'üçå', 'üçç', 'ü•≠', 'üçé', 'üçè', 'üçê', 'üçë', 'üçí', 'üçì', 'ü´ê', 'ü•ù', 'üçÖ', 'ü´í', 'ü•ë', 'ü•¶', 'ü•¨', 'ü•í', 'üå∂Ô∏è', 'ü´ë', 'ü•ï', 'üßÑ', 'üßÖ', 'ü•î', 'üçÜ', 'ü•ú', 'üå∞', 'ü´ò', 'ü••'],

                    // Alimentos y Bebidas
                    "Comidas Preparadas" => ['üçî', 'üçü', 'üçï', 'üå≠', 'ü•™', 'üåÆ', 'üåØ', 'ü´î', 'ü•ô', 'üßÜ', 'ü•ö', 'üç≥', 'ü•ò', 'üç≤', 'ü•£', 'ü•ó', 'ü´ï', 'ü•´'],
                    "Postres y Dulces" => ['üç¶', 'üçß', 'üç®', 'üç©', 'üç™', 'üéÇ', 'üç∞', 'üßÅ', 'ü•ß', 'üç´', 'üç¨', 'üç≠', 'üçÆ', 'üçØ', 'üç°', 'üçò', 'üçô', 'üçö'],
                    "Bebidas" => ['‚òï', 'ü´ñ', 'üçµ', 'üßÉ', 'ü•õ', 'üçº', 'üßã', 'üßâ', 'üç∂', 'üçæ', 'üç∑', 'üç∏', 'üçπ', 'üç∫', 'üçª', 'ü•Ç', 'ü•É', 'ü•§', 'üßä'],

                    // Clima y Fen√≥menos Naturales
                    "Clima y Fen√≥menos Naturales" => ['‚òÄÔ∏è', 'üå§Ô∏è', '‚õÖ', 'üå•Ô∏è', '‚òÅÔ∏è', 'üå¶Ô∏è', 'üåßÔ∏è', '‚õàÔ∏è', 'üå©Ô∏è', 'üå®Ô∏è', '‚ùÑÔ∏è', '‚òÉÔ∏è', '‚õÑ', 'üå¨Ô∏è', 'üí®', 'üå™Ô∏è', 'üå´Ô∏è', 'üåà', 'üî•', 'üí•', '‚òî', '‚ö°', 'üåä', 'üåã', '‚òÑÔ∏è', 'üí´', '‚≠ê', 'üåü', '‚ú®', 'üåô', 'üåö', 'üåù'],

                    // S√≠mbolos y Corazones
                    "Corazones y Amor" => ['‚ù§Ô∏è', 'üß°', 'üíõ', 'üíö', 'üíô', 'üíú', 'üñ§', 'ü§ç', 'ü§é', 'üíî', '‚ù£Ô∏è', 'üíï', 'üíû', 'üíì', 'üíó', 'üíñ', 'üíò', 'üíù', 'üíü', 'üíå', 'ü´∂', 'üíë', 'üíè', 'üíã'],
                    "S√≠mbolos de Estados y Efectos" => ['‚ú®', 'üí´', 'üí•', 'üí¶', 'üí®', 'üí¢', 'üï≥Ô∏è', 'üí§', '„Ä∞Ô∏è', 'üí¨', 'üóØÔ∏è', 'üí≠', 'üîî', 'üîï', '‚ùó', '‚ùì', 'üíØ', '‚úÖ', '‚ùå'],
                    "S√≠mbolos Musicales" => ['üéµ', 'üé∂', 'üéº', 'üéπ', 'ü•Å', 'üé∏', 'üé∫', 'üé∑', 'ü™ó', 'ü™ò', 'üéª', 'ü™ï'],

                    // Transporte
                    "Transporte Terrestre" => ['üöó', 'üöï', 'üöô', 'üöå', 'üöé', 'üèéÔ∏è', 'üöì', 'üöë', 'üöí', 'üöê', 'üöö', 'üöõ', 'üöú', 'üèçÔ∏è', 'üõµ', 'üö≤', 'üõ¥', 'üöÇ', 'üöÜ', 'üöä', 'üöâ', 'üöù', 'üö°', 'üö†', 'üõû', 'üõª'],
                    "Transporte A√©reo" => ['‚úàÔ∏è', 'üõ´', 'üõ¨', 'üõ©Ô∏è', 'üöÅ', 'üõ∏', 'ü™Ç', 'üõ∫'],
                    "Transporte Acu√°tico" => ['üõ≥Ô∏è', '‚õ¥Ô∏è', 'üö¢', 'üõ∂', '‚õµ', 'üö§', 'üõ•Ô∏è', '‚öì', 'üõü'],

                    // Gente y Partes del Cuerpo
                    "Personas y Gente" => ['üë∂', 'üë¶', 'üëß', 'üë®', 'üë©', 'üë±‚Äç‚ôÇÔ∏è', 'üë±‚Äç‚ôÄÔ∏è', 'üßì', 'üë¥', 'üëµ', 'üëÆ', 'üë∑', 'üíÇ', 'üë≥', 'üë≤', 'üßî', 'üßï', 'üë∞', 'ü§µ', 'ü§∞', 'üëº', 'ü§±', 'üôá', 'üßë‚Äçü¶∞', 'üßë‚Äçü¶±', 'üßë‚Äçü¶≥', 'üßë‚Äçü¶≤'],
                    "Partes del Cuerpo" => ['üëÅÔ∏è', 'üëÄ', 'üëÇ', 'üëÉ', 'üëÑ', 'üëÖ', 'ü¶∑', 'üëã', 'ü§ö', 'üñêÔ∏è', '‚úã', '‚úçÔ∏è', 'ü§≤', 'ü¶æ', 'ü¶ø', 'ü¶µ', 'ü¶∂', 'ü´Ä', 'ü´Å', 'üß†'],

                    // Viajes y Lugares
                    "Paisajes y Lugares" => ['üèïÔ∏è', 'üèñÔ∏è', 'üèúÔ∏è', 'üèùÔ∏è', 'üèûÔ∏è', 'üèüÔ∏è', 'üèõÔ∏è', 'üèóÔ∏è', 'üõ§Ô∏è', 'üõ£Ô∏è', 'üó∫Ô∏è', 'üóæ', 'üèîÔ∏è', '‚õ∞Ô∏è', 'üåã', 'üóª', 'üèôÔ∏è', 'üåÑ', 'üåÖ', 'üåÜ', 'üåá', 'üåÉ', 'üåâ'],
                    "Edificios" => ['üè†', 'üè°', 'üè¢', 'üè£', 'üè§', 'üè•', 'üè¶', 'üè®', 'üè©', 'üè™', 'üè´', 'üè¨', 'üè≠', 'üèØ', 'üè∞', 'üïç', '‚õ™', 'üïå', 'üïã', 'üõï', 'üíí', '‚õ©Ô∏è'],

                    // Actividades y Deportes
                    "Deportes" => ['‚öΩ', 'üèÄ', 'üèà', '‚öæ', 'ü•é', 'üéæ', 'üèê', 'üèâ', 'ü•è', 'üé±', 'ü™Ä', 'üèì', 'üè∏', 'üèí', 'üèë', 'ü•ç', 'üèè', '‚õ≥', 'ü™Å', 'ü§ø', 'üé£'],
                    "Entretenimiento y Juegos" => ['üé≤', 'üéÆ', 'üïπÔ∏è', 'üéØ', 'üé≥', 'üé™', 'üé®', 'üé≠', 'üéüÔ∏è', 'üé´', 'üéñÔ∏è', 'üèÜ', 'üèÖ', 'ü•á', 'ü•à', 'ü•â', '‚öúÔ∏è']
                ];
?>
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Nueva Entrada</title>
    <link rel="stylesheet" href="estilos.css"> <!-- Archivo de estilos CSS principal -->
    <link rel="stylesheet" href="/CKEditor5/ckeditor5/ckeditor5.css"> <!-- Estilos de CKEditor -->
    <style>
        /* Estilos adicionales para el bot√≥n y el selector de emojis */
        #toggle-emojis {
            position: fixed;
            top: 10px;
            right: 10px;
            z-index: 1000;
        }
        /* Estilos para la barra lateral de emojis */
        #emoji-sidebar {
            display: none;
            position: fixed;
            top: 50px;
            right: 0;
            width: 250px; /* Ancho fijo para no cubrir la entrada */
            height: calc(100% - 60px);
            overflow-y: auto;
            background-color: #f8f9fa;
            border-left: 1px solid #ddd;
            padding: 10px;
            z-index: 999;
        }
        .emoji-category {
            margin-bottom: 15px;
        }
        .emoji-category h4 {
            margin: 0;
            cursor: pointer;
            background-color: #e9ecef;
            padding: 5px;
            border-radius: 3px;
        }
        .emoji-container {
            display: none;
            flex-wrap: wrap;
            padding: 5px 0;
        }
        .emoji {
            font-size: 24px;
            margin: 3px;
            cursor: pointer;
        }
        .edit-page-container {
            margin-right: 260px; /* Deja espacio para la barra lateral */
        }
        .main-container {
            padding: 20px;
        }
        .edit-page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .edit-page-header h1 {
            margin: 0;
        }
    </style>
</head>
<body>
    <div class="edit-page-container">
        <div class="main-container">
            <header class="edit-page-header">
                <h1>Nueva Entrada</h1> <!-- T√≠tulo principal -->
                <!-- Bot√≥n para mostrar/ocultar los emojis -->
                <button id="toggle-emojis" class="button">Emojis</button>
            </header>
            <form method="post">
                <label for="titulo">T√≠tulo:</label>
                <input type="text" name="titulo" id="titulo" value="<?php echo htmlspecialchars($titulo, ENT_QUOTES, 'UTF-8'); ?>" required>

                <label for="editor">Contenido:</label>
                <div id="editor"><?php echo htmlspecialchars($contenido, ENT_QUOTES, 'UTF-8'); ?></div> <!-- Contenedor de CKEditor -->

                <!-- Campo oculto para el contenido -->
                <textarea name="contenido" id="contenido" style="display:none;"></textarea>

                <button type="submit" class="button">Publicar</button> <!-- Bot√≥n para publicar -->
                <button type="button" name="cancelar" class="button button-cancel" id="cancelar-btn">Cancelar</button> <!-- Bot√≥n para cancelar -->
            </form>

            <?php if (!empty($error)): ?>
                <div class="error"><?php echo htmlspecialchars($error, ENT_QUOTES, 'UTF-8'); ?></div> <!-- Mostrar error si existe -->
            <?php endif; ?>
        </div>

        <!-- Barra lateral de emojis -->
        <div id="emoji-sidebar">
            <?php foreach ($emojisPorCategoria as $categoria => $emojis): ?>
                <div class="emoji-category">
                    <h4><?php echo htmlspecialchars($categoria, ENT_QUOTES, 'UTF-8'); ?></h4> <!-- Encabezado de la categor√≠a -->
                    <div class="emoji-container">
                        <?php foreach ($emojis as $emoji): ?>
                            <span class="emoji"><?php echo htmlspecialchars($emoji, ENT_QUOTES, 'UTF-8'); ?></span> <!-- Emojis -->
                        <?php endforeach; ?>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </div>

    <!-- Importmap para CKEditor -->
    <script type="importmap">
        {
            "imports": {
                "ckeditor5": "/CKEditor5/ckeditor5/ckeditor5.js",
                "ckeditor5/": "/CKEditor5/ckeditor5/"
            }
        }
    </script>

    <!-- Script para inicializar CKEditor y manejar eventos -->
    <script type="module">
        import {
            ClassicEditor,
            Essentials,
            Paragraph,
            Bold,
            Italic,
            Underline,
            Strikethrough,
            FontFamily,
            FontSize,
            FontColor,
            FontBackgroundColor,
            Alignment,
            List,
            Indent,
            Link,
            Image,
            ImageToolbar,
            ImageCaption,
            ImageStyle,
            ImageResize,
            ImageUpload,
            BlockQuote,
            Table,
            TableToolbar,
            TableProperties,
            TableCellProperties,
            SimpleUploadAdapter
        } from 'ckeditor5'; // Importar CKEditor y sus plugins

        // Crear la instancia de CKEditor
        ClassicEditor
            .create(document.querySelector('#editor'), {
                plugins: [
                    Essentials, Paragraph, Bold, Italic, Underline, Strikethrough,
                    FontFamily, FontSize, FontColor, FontBackgroundColor, Alignment,
                    List, Indent, Link, Image, ImageToolbar, ImageCaption, ImageStyle,
                    ImageResize, ImageUpload, BlockQuote, Table, TableToolbar,
                    TableProperties, TableCellProperties, SimpleUploadAdapter
                ],
                toolbar: [
                    'undo', 'redo', '|', 'heading', '|',
                    'bold', 'italic', 'underline', 'strikethrough', '|',
                    'fontFamily', 'fontSize', 'fontColor', 'fontBackgroundColor', '|',
                    'alignment', '|',
                    'numberedList', 'bulletedList', '|',
                    'outdent', 'indent', '|',
                    'link', 'blockQuote', '|',
                    'insertTable', 'tableColumn', 'tableRow', 'mergeTableCells', 'tableProperties', 'tableCellProperties', '|',
                    'imageUpload'
                ],
                fontFamily: {
                    options: [
                        'default',
                        'Arial, Helvetica, sans-serif',
                        'Courier New, Courier, monospace',
                        'Georgia, serif',
                        'Lucida Sans Unicode, Lucida Grande, sans-serif',
                        'Tahoma, Geneva, sans-serif',
                        'Times New Roman, Times, serif',
                        'Trebuchet MS, Helvetica, sans-serif',
                        'Verdana, Geneva, sans-serif'
                    ]
                },
                image: {
                    resizeOptions: [
                        {
                            name: 'resizeImage:original',
                            value: null,
                            label: 'Original'
                        },
                        {
                            name: 'resizeImage:25',
                            value: '25',
                            label: '25%'
                        },
                        {
                            name: 'resizeImage:50',
                            value: '50',
                            label: '50%'
                        },
                        {
                            name: 'resizeImage:75',
                            value: '75',
                            label: '75%'
                        }
                    ],
                    toolbar: [
                        'imageTextAlternative', '|',
                        'imageStyle:alignLeft', 'imageStyle:alignCenter', 'imageStyle:alignRight', '|',
                        'imageStyle:wrapText', 'imageStyle:breakText', '|',
                        'resizeImage'
                    ],
                    styles: [
                        'alignLeft',
                        'alignCenter',
                        'alignRight',
                        'wrapText',
                        'breakText'
                    ]
                },
                table: {
                    contentToolbar: [
                        'tableColumn',
                        'tableRow',
                        'mergeTableCells',
                        'tableProperties',
                        'tableCellProperties'
                    ],
                    tableProperties: {
                        alignment: [ 'left', 'center', 'right' ]
                    },
                    tableCellProperties: {
                        // Configuraci√≥n adicional para las celdas, si es necesario
                    }
                },
                simpleUpload: {
                    uploadUrl: 'upload.php', // Ruta para la carga de im√°genes (aj√∫stala si es necesario)
                    // Puedes agregar headers o configuraciones adicionales si lo requieres
                }
            })
            .then(editor => {
                window.editor = editor; // Hacer que el editor est√© disponible globalmente

                // Al enviar el formulario, actualizar el textarea oculto con el contenido del editor
                document.querySelector('form').addEventListener('submit', event => {
                    document.querySelector('#contenido').value = editor.getData(); // Obtener el contenido del editor

                    if (document.querySelector('#titulo').value.trim() === '' || document.querySelector('#contenido').value.trim() === '') {
                        event.preventDefault(); // Evitar el env√≠o si el t√≠tulo o contenido est√°n vac√≠os
                        alert('El t√≠tulo y el contenido no pueden estar vac√≠os.');
                    }
                });

                // Manejar el clic en el bot√≥n 'Cancelar'
                document.getElementById('cancelar-btn').addEventListener('click', () => {
                    window.location.href = 'admin.php';
                });

                // Evento para mostrar/ocultar las categor√≠as de emojis individualmente
                document.querySelectorAll('.emoji-category h4').forEach(categoryHeader => {
                    categoryHeader.addEventListener('click', () => {
                        const container = categoryHeader.nextElementSibling;
                        container.style.display = container.style.display === 'none' || container.style.display === '' ? 'flex' : 'none';
                    });
                });

                // Evento para el bot√≥n de mostrar/ocultar el panel de emojis
                const toggleEmojisButton = document.getElementById('toggle-emojis');
                const emojiSidebar = document.getElementById('emoji-sidebar');

                toggleEmojisButton.addEventListener('click', () => {
                    emojiSidebar.style.display = emojiSidebar.style.display === 'none' || emojiSidebar.style.display === '' ? 'block' : 'none';
                });

                // Evento de clic en los emojis para insertarlos en el editor
                document.querySelectorAll('.emoji').forEach(emoji => {
                    emoji.addEventListener('click', event => {
                        const emojiText = event.target.textContent;
                        editor.model.change(writer => {
                            const insertPosition = editor.model.document.selection.getFirstPosition();
                            writer.insertText(emojiText, insertPosition);
                        });
                    });
                });
            })
            .catch(error => {
                console.error('Hubo un problema al cargar el editor:', error); // Mostrar error si ocurre
            });
    </script>
</body>
</html>
